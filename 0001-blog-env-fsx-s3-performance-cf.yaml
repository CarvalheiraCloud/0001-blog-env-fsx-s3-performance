Description:  VPC Template,a pair of public and private subnets, internet gateway, one NAT gateways, and route tables.
Parameters:

  AmazonLinuxAmiId:
    Type: String
    Default: "ami-05b10e08d247fb927"

  InstanceTypeParameter: 
    Type: String
    Default: "t2.micro"

  BucketName: 
    Type: String
    Default: "bkt-carvalheira-cloud"

  LustrePath:
    Type: String
    Default: "/validation"

  EnvironmentName:
    Description: "Project Name"
    Type: String
    Default: "Project-Carvalheira-Cloud"

  VpcCIDR:
    Description: "CIDR for the VPC"
    Type: String
    Default: "10.192.0.0/16"

  PublicSubnet1CIDR:
    Description: "CIDR for the public subnet 1"
    Type: String
    Default: "10.192.10.0/24"

  PublicSubnet2CIDR:
    Description: "CIDR for the public subnet 2"
    Type: String
    Default: "10.192.11.0/24"

  PrivateSubnet1CIDR:
    Description: "CIDR for the private subnet 1"
    Type: String
    Default: "10.192.20.0/24"

  PrivateSubnet2CIDR:
    Description: "CIDR for the public subnet 2"
    Type: String
    Default: "10.192.21.0/24"

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ2)

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (AZ1)

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (AZ2)

  NatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Routes

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Routes (AZ1)

  DefaultPrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet2

  NoIngressSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "no-ingress-security-access-sg"
      GroupDescription: "Security group with no ingress rule"
      VpcId: !Ref VPC

  ProjectSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow ports for this project
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 988
          ToPort: 988
          CidrIp: !Ref VpcCIDR
      SecurityGroupEgress:
        - IpProtocol: "-1"
          CidrIp: 0.0.0.0/0
         

  S3LinkedLustreFileSystem:
    Type: AWS::FSx::FileSystem
    Properties:
      FileSystemType: "LUSTRE"
      FileSystemTypeVersion: "2.12"
      StorageCapacity: 1200
      SubnetIds: [!Ref PrivateSubnet1]
      SecurityGroupIds: [!Ref ProjectSecurityGroup]
      Tags:
        - Key: "Name"
          Value: "s3LinkedFSxLustre"
      LustreConfiguration:
        CopyTagsToBackups: true
        DeploymentType: "PERSISTENT_2"
        PerUnitStorageThroughput: 125
        DataCompressionType: "LZ4" 
        WeeklyMaintenanceStartTime: "6:00:00"


  S3LinkedLustreFileSystemDra:
    Type: 'AWS::FSx::DataRepositoryAssociation'
    Properties:
      FileSystemId: !Ref S3LinkedLustreFileSystem
      FileSystemPath: !Ref LustrePath
      DataRepositoryPath: !Join ["", ["s3://", !Ref BucketName, !Ref LustrePath]]
      BatchImportMetaDataOnCreate: true
      S3:
        AutoImportPolicy:
          Events:
            - NEW
            - CHANGED
            - DELETED
        AutoExportPolicy:
          Events:
            - NEW
            - CHANGED
            - DELETED
  NewKeyPair:
    Type: 'AWS::EC2::KeyPair'
    Properties:
      KeyName: ProjetoKeyPair


  S3GatewayEndpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcEndpointType: 'Gateway'
      VpcId: !Ref VPC
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: '*'
            Action:
              - '*'
            Resource:
              - '*'
      RouteTableIds:
        - !Ref PrivateRouteTable1


  EC2RoleProject:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                - 's3:*'
                - 'ec2:*'
                Resource: "*"
  
  EC2RoleProjectInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref EC2RoleProject


  Instance:
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: !Ref AmazonLinuxAmiId    
      InstanceType: !Ref InstanceTypeParameter
      KeyName: !Ref NewKeyPair
      IamInstanceProfile: !Ref EC2RoleProjectInstanceProfile
      Tags: 
        - Key: "Name"
          Value: "Instance-test-fsx-s3"
        - Key: "Project"
          Value: "Carvalheira.Cloud"      
      NetworkInterfaces: 
        - AssociatePublicIpAddress: false
          DeviceIndex: "0"
          GroupSet: 
            - Ref: "NoIngressSecurityGroup"
          SubnetId: 
            Ref: "PrivateSubnet1"      
      UserData: !Base64 
        "Fn::Sub": 
          - |
            #!/bin/bash
            sudo dnf install -y lustre-client
            sudo dnf -y update kernel
            sudo mkdir -p /mnt/fsx
            sudo mount -t lustre -o relatime,flock ${dnsname}@tcp:/${lustremountname} /mnt/fsx
            cd ~
            dd if=/dev/zero of="big_test_file.txt" bs=1M count=4096
            dd if=/dev/zero of="small_test_file-01.txt" bs=1M count=100
            dd if=/dev/zero of="small_test_file-02.txt" bs=1M count=100
            dd if=/dev/zero of="small_test_file-03.txt" bs=1M count=100
            dd if=/dev/zero of="small_test_file-04.txt" bs=1M count=100
            dd if=/dev/zero of="small_test_file-05.txt" bs=1M count=100
            dd if=/dev/zero of="small_test_file-06.txt" bs=1M count=100
            dd if=/dev/zero of="small_test_file-07.txt" bs=1M count=100
            dd if=/dev/zero of="small_test_file-08.txt" bs=1M count=100
            dd if=/dev/zero of="small_test_file-09.txt" bs=1M count=100
            dd if=/dev/zero of="small_test_file-10.txt" bs=1M count=100
            dd if=/dev/zero of="small_test_file-11.txt" bs=1M count=100
            dd if=/dev/zero of="small_test_file-12.txt" bs=1M count=100
            dd if=/dev/zero of="small_test_file-13.txt" bs=1M count=100
            dd if=/dev/zero of="small_test_file-14.txt" bs=1M count=100
            dd if=/dev/zero of="small_test_file-15.txt" bs=1M count=100
            dd if=/dev/zero of="small_test_file-16.txt" bs=1M count=100
            dd if=/dev/zero of="small_test_file-17.txt" bs=1M count=100
            dd if=/dev/zero of="small_test_file-18.txt" bs=1M count=100
            dd if=/dev/zero of="small_test_file-19.txt" bs=1M count=100
            dd if=/dev/zero of="small_test_file-20.txt" bs=1M count=100
          - dnsname: !GetAtt S3LinkedLustreFileSystem.DNSName
            lustremountname: !GetAtt S3LinkedLustreFileSystem.LustreMountName

